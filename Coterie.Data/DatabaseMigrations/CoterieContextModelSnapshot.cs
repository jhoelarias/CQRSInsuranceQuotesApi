// <auto-generated />
using Coterie.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Coterie.Data.DatabaseMigrations
{
    [DbContext(typeof(CoterieContext))]
    partial class CoterieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("Coterie.Domain.Entities.Business", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Factor")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("BusinessId");

                    b.ToTable("Businesses");

                    b.HasData(
                        new
                        {
                            BusinessId = 1,
                            Factor = 1.0,
                            Name = "Architect"
                        },
                        new
                        {
                            BusinessId = 2,
                            Factor = 0.5,
                            Name = "Plumber"
                        },
                        new
                        {
                            BusinessId = 3,
                            Factor = 1.25,
                            Name = "Programmer"
                        });
                });

            modelBuilder.Entity("Coterie.Domain.Entities.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<double>("Factor")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("StateId");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            StateId = 1,
                            Code = "OH",
                            Factor = 1.0,
                            Name = "OHIO"
                        },
                        new
                        {
                            StateId = 2,
                            Code = "FL",
                            Factor = 1.2,
                            Name = "FLORIDA"
                        },
                        new
                        {
                            StateId = 3,
                            Code = "TX",
                            Factor = 0.94299999999999995,
                            Name = "TEXAS"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
